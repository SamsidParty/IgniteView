"use strict";(self.webpackChunkigniteview=self.webpackChunkigniteview||[]).push([[609],{2761:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"interop/preload_scripts","title":"Preload Scripts","description":"With IgniteView, you can define multiple preload scripts, which are injected into the WebWindow on page load.","source":"@site/docs/interop/preload_scripts.md","sourceDirName":"interop","slug":"/interop/preload_scripts","permalink":"/docs/interop/preload_scripts","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Calling JavaScript From C#","permalink":"/docs/interop/call_js_from_csharp"}}');var n=i(4848),s=i(8453);const o={},c="Preload Scripts",a={},l=[{value:"Creating A Preload Script",id:"creating-a-preload-script",level:2},{value:"Registering The Preload Script",id:"registering-the-preload-script",level:2},{value:"Dynamic Preload Scripts",id:"dynamic-preload-scripts",level:2}];function d(e){const r={admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"preload-scripts",children:"Preload Scripts"})}),"\n",(0,n.jsx)(r.p,{children:"With IgniteView, you can define multiple preload scripts, which are injected into the WebWindow on page load."}),"\n",(0,n.jsx)(r.h2,{id:"creating-a-preload-script",children:"Creating A Preload Script"}),"\n",(0,n.jsxs)(r.p,{children:["A preload script is simply a ",(0,n.jsx)(r.code,{children:".js"})," file in the web content directory. You can start by creating a ",(0,n.jsx)(r.code,{children:"preload.js"})," file in the web root:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",metastring:'title="preload.js"',children:'alert("Preload script works!");\n'})}),"\n",(0,n.jsx)(r.p,{children:"For vite projects:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Add the ",(0,n.jsx)(r.code,{children:"preload.js"})," file to ",(0,n.jsx)(r.code,{children:"src-vite/public/preload.js"})]}),"\n",(0,n.jsxs)(r.li,{children:["Make sure the JavaScript file is in the ",(0,n.jsx)(r.code,{children:"public"})," directory, otherwise vite will transform the file"]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"For raw HTML projects:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Add the ",(0,n.jsx)(r.code,{children:"preload.js"})," file to ",(0,n.jsx)(r.code,{children:"wwwroot/preload.js"})]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"registering-the-preload-script",children:"Registering The Preload Script"}),"\n",(0,n.jsxs)(r.p,{children:["You can use the ",(0,n.jsx)(r.code,{children:"RegisterPreloadScriptFromPath"})," method on the ",(0,n.jsx)(r.code,{children:"AppManager"})," to register your preload script.\r\nThis method must be called ",(0,n.jsx)(r.em,{children:"before"})," any windows are created, and ",(0,n.jsx)(r.em,{children:"after"})," the ",(0,n.jsx)(r.code,{children:"AppManager"})," has been created."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",metastring:'title="Program.cs"',children:'// Construct AppManager (app) here\r\n\r\napp.RegisterPreloadScriptFromPath("/preload.js"); // Leading "/" is important\r\n\r\n// Create main window here\n'})}),"\n",(0,n.jsxs)(r.admonition,{type:"tip",children:[(0,n.jsxs)(r.p,{children:["Most IgniteView methods involving a path parameter require it to be relative to the web root.",(0,n.jsx)(r.br,{}),"\n","For example, ",(0,n.jsx)(r.code,{children:"/hello.txt"})," will resolve to:"]}),(0,n.jsxs)(r.p,{children:["For vite projects: ",(0,n.jsx)(r.code,{children:"src-vite/public/hello.txt"}),(0,n.jsx)(r.br,{}),"\n","For raw HTML projects: ",(0,n.jsx)(r.code,{children:"wwwroot/hello.txt"})]})]}),"\n",(0,n.jsx)(r.h2,{id:"dynamic-preload-scripts",children:"Dynamic Preload Scripts"}),"\n",(0,n.jsx)(r.p,{children:"You can also load preload scripts from a simple JavaScript string:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",metastring:'title="Program.cs"',children:"app.RegisterPreloadScriptFromString(\"alert('Dynamic preload script works!')\");\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Or with ",(0,n.jsx)(r.code,{children:"JSFunctionCall"}),":"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",metastring:'title="Program.cs"',children:'app.RegisterPreloadScriptFromString(new JSFunctionCall("alert", "Dynamic preload script works!"));\n'})})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,r,i)=>{i.d(r,{R:()=>o,x:()=>c});var t=i(6540);const n={},s=t.createContext(n);function o(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);